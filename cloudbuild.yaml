# Cloud Build pipeline for the Rust API (team repo)
# - Builds the Docker image
# - Pushes to Artifact Registry (or Container Registry fallback)
# - Deploys to Cloud Run as a public HTTPS service
#
# Required once per project (outside this file):
#   gcloud services enable run.googleapis.com cloudbuild.googleapis.com secretmanager.googleapis.com artifactregistry.googleapis.com
#   gcloud artifacts repositories create containers --repository-format=docker --location=$REGION
#
# Secrets expected in Secret Manager:
#   COMMONS_HOST, COMMONS_PORT, COMMONS_NAME, COMMONS_USER, COMMONS_PASSWORD, COMMONS_SSL_MODE
#   GEMINI_API_KEY, CLAUDE_API_KEY
#
# Trigger suggestion: run on pushes to main for /team/**

options:
  logging: CLOUD_LOGGING_ONLY

substitutions:
  # Change these for your project
  _REGION: us-central1
  _SERVICE_NAME: partner-tools-api
  _REPOSITORY: containers          # Artifact Registry repo name (created once)
  _PORT: "8080"                    # Cloud Run expects 8080 by default

images:
  - "us-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_SERVICE_NAME}:$COMMIT_SHA"
  - "us-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_SERVICE_NAME}:latest"

steps:
  # 1) Build the image
  - name: "gcr.io/cloud-builders/docker"
    id: "docker-build"
    args:
      [
        "build",
        "-t", "us-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_SERVICE_NAME}:$COMMIT_SHA",
        "-t", "us-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_SERVICE_NAME}:latest",
        "."
      ]

  # 2) Push the image
  - name: "gcr.io/cloud-builders/docker"
    id: "docker-push"
    args:
      [ "push", "us-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_SERVICE_NAME}:$COMMIT_SHA" ]

  - name: "gcr.io/cloud-builders/docker"
    id: "docker-push-latest"
    args:
      [ "push", "us-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_SERVICE_NAME}:latest" ]

  # 3) Deploy to Cloud Run
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    id: "cloud-run-deploy"
    entrypoint: gcloud
    args:
      [
        "run","deploy","${_SERVICE_NAME}",
        "--image","us-docker.pkg.dev/$PROJECT_ID/${_REPOSITORY}/${_SERVICE_NAME}:$COMMIT_SHA",
        "--region","${_REGION}",
        "--platform","managed",
        "--allow-unauthenticated",
        "--port","${_PORT}",
        # CPU/Memory & scaling (tweak as needed)
        "--cpu","1",
        "--memory","512Mi",
        "--min-instances","0",
        "--max-instances","2",
        # App env (non-secret)
        "--set-env-vars","SERVER_HOST=0.0.0.0,SERVER_PORT=${_PORT}",
        # DB + API keys from Secret Manager -> env vars inside the service
        "--set-secrets",
        "COMMONS_HOST=COMMONS_HOST:latest,COMMONS_PORT=COMMONS_PORT:latest,COMMONS_NAME=COMMONS_NAME:latest,COMMONS_USER=COMMONS_USER:latest,COMMONS_PASSWORD=COMMONS_PASSWORD:latest,COMMONS_SSL_MODE=COMMONS_SSL_MODE:latest,GEMINI_API_KEY=GEMINI_API_KEY:latest,CLAUDE_API_KEY=CLAUDE_API_KEY:latest"
      ]

# Helpful outputs in Cloud Build UI
artifacts:
  objects:
    location: "gs://$PROJECT_ID-cloudbuild-artifacts/${_SERVICE_NAME}/$BUILD_ID/"
    paths: ["**/*"]
